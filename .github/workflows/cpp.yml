name: C++ CI

on:
  pull_request

jobs:
  formatting-check:
    name: Formatting check
    runs-on: [self-hosted, ubuntu]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check line breaks
        run: |
          pushd $GITHUB_WORKSPACE
          ci-extra/check-lines.sh
          popd
      - name: Run clang-format style check
        # TODO use native clang-format
        uses: jidicula/clang-format-action@v4.14.0
        with:
          clang-format-version: '19'
          check-path: '.'

  test:
    needs: formatting-check
    name: "Test (${{ matrix.toolchain.name }}, ${{ matrix.build_type }})"

    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - { name: Linux/GCC,   compiler: gcc-14 }
          - { name: Linux/Clang, compiler: clang-19 }
        build_type:
          - Release
          - Debug
          # - RelWithDebInfo
          - Sanitized
          - SanitizedDebug
          # - ThreadSanitized

    runs-on: [self-hosted, ubuntu, "${{ matrix.toolchain.compiler }}", ghc]

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build CMake project
        run: |
          ci-extra/build.sh ${{ matrix.build_type }}

      - name: Build tests
        run: |
          pushd test
          stack build
          popd

      - name: Run tests
        run: |
          ci-extra/test.sh ${{ matrix.build_type }}
        timeout-minutes: 1

      - name: Run tests with valgrind
        if: ${{ matrix.build_type == 'RelWithDebInfo' }}
        run: ci-extra/test-valgrind.sh ${{ matrix.build_type }}
